# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите количество элементов 1-го множества: "))
# m = int(input("Введите количество элементов 2-го множества: "))
# number_1 = set()
# number_2 = set()
# print("Введите элементы 1-го множества.")
# for i in range(n):
#     number_1.add(int(input(f"Введите {i+1}-е число: ")))
# print("Введите элементы 2-го множества.")
# for i in range(m):
#     number_2.add(int(input(f"Введите {i+1}-е число: ")))
# print(f"Ваше 1-е множество чисел {number_1}")
# print(f"Ваше 2-е множество чисел {number_2}")
# list = list(number_1.union(number_2))
# list.sort()
# print(f"Ваши отсортированные числа {list}")



# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены
# только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте
# выросло ai ягод.
#   В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего
# модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
#   Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.

# bushes_quantity = int(input("Введите количество кустов: "))
# berries = [int(input("Введите количество ягод на кусте: ")) for i in range(bushes_quantity)]
# max_count = []
# for i in range(len(berries) - 1):
#     max_count.append(berries[i - 1] + berries[i] + berries[i + 1])
# max_count.append(berries[0] + berries[-1] + berries[-2])
# print(f"Собирающий модуль за один заход может максимально собрать {max(max_count)} ягод")